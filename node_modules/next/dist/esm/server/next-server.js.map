{"version":3,"sources":["../../src/server/next-server.ts"],"sourcesContent":["import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from './request/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, ExpireTime } from './lib/revalidate'\nimport type { WaitUntil } from './after/builtin-request-context'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n  FUNCTIONS_CONFIG_MANIFEST,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, {\n  CachedRouteKind,\n  type IncrementalCacheItem,\n} from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { INSTRUMENTATION_HOOK_FILENAME } from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { AwaiterOnce } from './after/awaiter'\nimport { AsyncCallbackSet } from './lib/async-callback-set'\nimport { initializeCacheHandlers, setCacheHandler } from './use-cache/handlers'\nimport type { UnwrapPromise } from '../lib/coalesced-function'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  private registeredInstrumentation: boolean = false\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  protected cleanupListeners = new AsyncCallbackSet()\n  protected internalWaitUntil: WaitUntil | undefined\n  private isDev: boolean\n  private sriEnabled: boolean\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    this.isDev = options.dev ?? false\n    this.sriEnabled = Boolean(options.conf.experimental?.sri?.algorithm)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    await this.loadCustomCacheHandlers()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: true,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      })\n        .then(async ({ ComponentMod }) => {\n          // we need to ensure fetch is patched before we require the page,\n          // otherwise if the fetch is patched by user code, we will be patching it\n          // too late and there won't be any caching behaviors\n          ComponentMod.patchFetch()\n\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    if (this.registeredInstrumentation) return\n    this.registeredInstrumentation = true\n    await this.instrumentation?.register?.()\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  private async loadCustomCacheHandlers() {\n    const { cacheHandlers } = this.nextConfig.experimental\n    if (!cacheHandlers) return\n\n    // If we've already initialized the cache handlers interface, don't do it\n    // again.\n    if (!initializeCacheHandlers()) return\n\n    for (const [kind, handler] of Object.entries(cacheHandlers)) {\n      if (!handler) continue\n\n      setCacheHandler(\n        kind,\n        interopDefault(\n          await dynamicImportEsmDefault(\n            formatDynamicImportPath(this.distDir, handler)\n          )\n        )\n      )\n    }\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    await this.loadCustomCacheHandlers()\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      expireTime: ExpireTime | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      expireTime: options.expireTime,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n      onError: this.instrumentationOnRequestError.bind(this),\n      multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts,\n          this.getServerComponentsHmrCache(),\n          false,\n          {\n            buildId: this.buildId,\n          }\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts,\n        {\n          buildId: this.buildId,\n          deploymentId: this.nextConfig.deploymentId,\n          customServer: this.serverOptions.customServer || undefined,\n        },\n        {\n          isFallback: false,\n          isDraftMode: renderOpts.isDraftMode,\n          developmentNotFoundSourcePage: getRequestMeta(\n            req,\n            'developmentNotFoundSourcePage'\n          ),\n        }\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult,\n    previousCacheEntry?: IncrementalCacheItem\n  ): Promise<{\n    buffer: Buffer\n    contentType: string\n    maxAge: number\n    upstreamEtag: string\n    etag: string\n  }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(imageUpstream, paramsResult, this.nextConfig, {\n        isDev: this.renderOpts.dev,\n        previousCacheEntry,\n      })\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          locale,\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (locale) {\n      pagePaths.unshift(\n        ...pagePaths.map((path) => `/${locale}${path === '/' ? '' : path}`)\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n          isDev: this.isDev,\n          sriEnabled: this.sriEnabled,\n        })\n\n        if (\n          locale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${locale}/`) &&\n          pagePath !== `/${locale}`\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n    // Ignore if its a middleware request\n    if (getRequestMeta(req, 'middlewareInvoke')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async ({ previousCacheEntry }) => {\n            const { buffer, contentType, maxAge, upstreamEtag, etag } =\n              await this.imageOptimizer(\n                req,\n                res,\n                paramsResult,\n                previousCacheEntry\n              )\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n                upstreamEtag,\n              },\n              isFallback: false,\n              revalidate: maxAge,\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          cacheEntry.value.etag,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    addRequestMeta(req, 'bubbleNoFallback', true)\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromRequest(req, pathname),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      mocked.res.statusCode !== 200 &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) {\n      return null\n    } else {\n      const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n      return manifest\n    }\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected async getMiddleware(): Promise<MiddlewareRoutingItem | undefined> {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      const middlewareModule = await this.loadNodeMiddleware()\n\n      if (middlewareModule) {\n        return {\n          match: getMiddlewareRouteMatcher(\n            middlewareModule.config?.matchers || [\n              { regexp: '.*', originalSource: '/:path*' },\n            ]\n          ),\n          page: '/',\n        }\n      }\n\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  private async loadNodeMiddleware() {\n    if (!this.nextConfig.experimental.nodeMiddleware) {\n      return\n    }\n\n    try {\n      const functionsConfig = this.renderOpts.dev\n        ? {}\n        : require(join(this.distDir, 'server', FUNCTIONS_CONFIG_MANIFEST))\n\n      if (this.renderOpts.dev || functionsConfig?.functions?.['/_middleware']) {\n        // if used with top level await, this will be a promise\n        return require(join(this.distDir, 'server', 'middleware.js'))\n      }\n    } catch (err) {\n      if (\n        isError(err) &&\n        err.code !== 'ENOENT' &&\n        err.code !== 'MODULE_NOT_FOUND'\n      ) {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    const nodeMiddleware = await this.loadNodeMiddleware()\n\n    if (!info && nodeMiddleware) {\n      return true\n    }\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = getRequestMeta(params.request, 'locale')\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const requestData = {\n      headers: params.request.headers,\n      method,\n      nextConfig: {\n        basePath: this.nextConfig.basePath,\n        i18n: this.nextConfig.i18n,\n        trailingSlash: this.nextConfig.trailingSlash,\n        experimental: this.nextConfig.experimental,\n      },\n      url: url,\n      page,\n      body:\n        method !== 'GET' && method !== 'HEAD'\n          ? (getRequestMeta(params.request, 'clonableBody') as any)\n          : undefined,\n\n      signal: signalFromNodeResponse(params.response.originalResponse),\n      waitUntil: this.getWaitUntil(),\n    }\n    let result:\n      | UnwrapPromise<ReturnType<typeof import('./web/sandbox').run>>\n      | undefined\n\n    // if no middleware info check for Node.js middleware\n    // this is not in the middleware-manifest as that historically\n    // has only included edge-functions, we need to do a breaking\n    // version bump for that manifest to write this info there if\n    // we decide we want to\n    if (!middlewareInfo) {\n      let middlewareModule\n      middlewareModule = await this.loadNodeMiddleware()\n\n      if (!middlewareModule) {\n        throw new MiddlewareNotFoundError()\n      }\n      const adapterFn: typeof import('./web/adapter').adapter =\n        middlewareModule.default || middlewareModule\n\n      result = await adapterFn({\n        handler: middlewareModule.middleware || middlewareModule,\n        request: requestData,\n        page: 'middleware',\n      })\n    } else {\n      const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n      result = await run({\n        distDir: this.distDir,\n        name: middlewareInfo.name,\n        paths: middlewareInfo.paths,\n        edgeFunctionEntry: middlewareInfo,\n        request: requestData,\n        useCache: true,\n        onWarning: params.onWarning,\n      })\n    }\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = getRequestMeta(params.req, 'isNextDataReq')\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n\n  protected onServerClose(listener: () => Promise<void>) {\n    this.cleanupListeners.add(listener)\n  }\n\n  async close(): Promise<void> {\n    await this.cleanupListeners.runAll()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil {\n    this.internalWaitUntil ??= this.createInternalWaitUntil()\n    return this.internalWaitUntil\n  }\n\n  private createInternalWaitUntil() {\n    if (this.minimalMode) {\n      throw new InvariantError(\n        'createInternalWaitUntil should never be called in minimal mode'\n      )\n    }\n\n    const awaiter = new AwaiterOnce({ onError: console.error })\n\n    // TODO(after): warn if the process exits before these are awaited\n    this.onServerClose(() => awaiter.awaiting())\n\n    return awaiter.waitUntil\n  }\n}\n"],"names":["DecodeError","PageNotFoundError","MiddlewareNotFoundError","fs","join","resolve","getRouteMatcher","addRequestMeta","getRequestMeta","PAGES_MANIFEST","BUILD_ID_FILE","MIDDLEWARE_MANIFEST","PRERENDER_MANIFEST","ROUTES_MANIFEST","CLIENT_PUBLIC_FILES_PATH","APP_PATHS_MANIFEST","SERVER_DIRECTORY","NEXT_FONT_MANIFEST","PHASE_PRODUCTION_BUILD","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","FUNCTIONS_CONFIG_MANIFEST","findDir","NodeNextRequest","NodeNextResponse","sendRenderResult","parseUrl","Log","BaseServer","NoFallbackError","getMaybePagePath","getPagePath","denormalizePagePath","normalizePagePath","loadComponents","isError","getProperError","splitCookiesString","toNodeOutgoingHttpHeaders","getMiddlewareRouteMatcher","loadEnvConfig","urlQueryToSearchParams","removeTrailingSlash","getNextPathnameInfo","getCloneableBody","checkIsOnDemandRevalidate","ResponseCache","CachedRouteKind","IncrementalCache","normalizeAppPath","setHttpClientAndAgentOptions","isPagesAPIRouteMatch","INSTRUMENTATION_HOOK_FILENAME","BubbledError","getTracer","NextNodeServerSpan","nodeFs","getRouteRegex","pipeToNodeResponse","createRequestResponseMocks","NEXT_RSC_UNION_QUERY","signalFromNodeResponse","RouteModuleLoader","loadManifest","lazyRenderAppPage","lazyRenderPagesPage","interopDefault","formatDynamicImportPath","isInterceptionRouteRewrite","RouteKind","InvariantError","AwaiterOnce","AsyncCallbackSet","initializeCacheHandlers","setCacheHandler","dynamicImportEsmDefault","process","env","NEXT_MINIMAL","id","then","mod","default","dynamicRequire","__non_webpack_require__","require","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","set","NextNodeServer","constructor","options","registeredInstrumentation","cleanupListeners","handleNextImageRequest","req","res","parsedUrl","pathname","startsWith","minimalMode","nextConfig","output","statusCode","body","send","ImageOptimizerCache","imageOptimizerCache","distDir","sendResponse","ImageError","imageResponseCache","imagesConfig","images","loader","unoptimized","render404","paramsResult","validateParams","originalRequest","query","renderOpts","dev","errorMessage","cacheKey","getCacheKey","cacheEntry","getExtension","previousCacheEntry","buffer","contentType","maxAge","upstreamEtag","etag","imageOptimizer","value","kind","IMAGE","extension","isFallback","revalidate","routeKind","incrementalCache","originalResponse","href","isStatic","isMiss","isStale","Boolean","err","message","handleCatchallRenderRequest","i18n","i18nProvider","fromRequest","match","render","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","page","handled","runEdgeFunction","params","appPaths","apiError","instrumentationOnRequestError","routePath","routerKind","routeType","revalidateReason","undefined","handleApiRequest","formatServerError","logErrorWithOriginalStack","logError","renderError","handleCatchallMiddlewareRequest","parsed","isMiddlewareInvoke","handleFinished","middleware","getMiddleware","initUrl","pathnameInfo","normalizedPathname","result","bubblingResult","ensureMiddleware","url","runMiddleware","request","response","key","Object","entries","headers","setHeader","status","end","code","error","console","finished","isDev","sriEnabled","conf","experimental","sri","algorithm","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","NEXT_DEPLOYMENT_ID","deploymentId","appDocumentPreloading","isDefaultEnabled","isAppPath","catch","preloadEntriesOnStart","unstable_preloadEntries","dynamicRoutes","getRoutesManifest","map","r","regex","re","serverOptions","experimentalTestProxy","NEXT_PRIVATE_TEST_PROXY","interceptTestApis","middlewareManifestPath","serverDistDir","prepare","appPathsManifest","getAppPathsManifest","pagesManifest","getPagesManifest","loadCustomCacheHandlers","keys","ComponentMod","patchFetch","webpackRequire","__next_app__","m","handleUpgrade","loadInstrumentationModule","instrumentation","dir","cause","prepareImpl","runInstrumentationHookIfAvailable","register","forceReload","silent","cacheHandlers","handler","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","cacheHandler","getCacheFilesystem","allowedRevalidateHeaderKeys","fetchCacheKeyPrefix","maxMemoryCacheSize","cacheMaxMemorySize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","getHasStaticDir","existsSync","enabledDirectories","app","getinterceptionRoutePatterns","routesManifest","rewrites","beforeFiles","filter","rewrite","RegExp","hasPage","locales","getBuildId","buildIdFile","readFileSync","trim","getEnabledDirectories","pages","type","generateEtags","poweredByHeader","expireTime","runApi","handledAsEdgeFunction","module","load","filename","previewProps","bind","trustHostHeader","hostname","fetchHostname","onError","multiZoneDraftMode","renderHTML","trace","renderHTMLImpl","nextFontManifest","getServerComponentsHmrCache","buildId","customServer","isDraftMode","developmentNotFoundSourcePage","fetchExternalImage","fetchInternalImage","handleInternalReq","newReq","newRes","routerServerHandler","isAbsolute","imageUpstream","renderPageComponent","ctx","bubbleNoFallback","length","getOriginalAppPaths","findPageComponents","locale","spanName","attributes","findPageComponentsImpl","_url","pagePaths","amp","unshift","path","pagePath","components","Component","isExperimentalCompile","getStaticProps","getNextFontManifest","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","getRequestHandler","makeRequestHandler","wrapRequestHandlerNode","urlPath","revalidateHeaders","opts","mocked","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderToHTML","renderErrorToResponseImpl","is404","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","middlewareModule","loadNodeMiddleware","config","regexp","originalSource","functions","getEdgeFunctionInfo","foundPage","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","nodeMiddleware","functionsConfig","hasMiddleware","ensureEdgeFunction","_params","isOnDemandRevalidate","Response","skipMiddlewareUrlNormalize","toString","port","middlewareInfo","method","toUpperCase","requestData","basePath","trailingSlash","signal","waitUntil","getWaitUntil","adapterFn","run","edgeFunctionEntry","useCache","onWarning","has","cookies","getSetCookie","flatMap","maybeCompoundCookie","delete","cookie","append","_cachedPreviewManifest","NODE_ENV","NEXT_PHASE","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","afterFiles","fallback","attachRequestMeta","isUpgradeReq","protocol","host","edgeInfo","isNextDataRequest","initialUrl","URL","queryString","fromEntries","searchParams","search","globalThis","__incrementalCache","serverComponentsHmrCache","fetchMetrics","statusMessage","statusText","forEach","toLowerCase","appendHeader","_serverDistDir","getFallbackErrorComponents","args","onServerClose","listener","add","close","runAll","getInternalWaitUntil","internalWaitUntil","createInternalWaitUntil","awaiter","awaiting"],"mappings":"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"}